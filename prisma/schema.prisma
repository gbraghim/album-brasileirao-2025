generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(cuid())
  name            String
  email           String           @unique
  password        String
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  numeroDeLogins  Int              @default(0)
  primeiroAcesso  Boolean          @default(true)
  notificacoes    Notificacao[]
  pacotes         Pacote[]
  trocasEnviadas  Troca[]          @relation("TrocasEnviadas")
  trocasRecebidas Troca[]          @relation("TrocasRecebidas")
  trocas          TrocaFigurinha[]
  figurinhas      UserFigurinha[]
}

model Pacote {
  id         String      @id @default(cuid())
  userId     String
  tipo       String      @default("DIARIO")
  aberto     Boolean     @default(false)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  figurinhas Figurinha[]
  user       User        @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Figurinha {
  id              String           @id @default(cuid())
  pacoteId        String
  jogadorId       String
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  jogador         Jogador          @relation(fields: [jogadorId], references: [id])
  pacote          Pacote           @relation(fields: [pacoteId], references: [id])
  trocas          Troca[]
  trocasFigurinha TrocaFigurinha[]
  usuarios        UserFigurinha[]

  @@index([jogadorId])
  @@index([pacoteId])
}

model UserFigurinha {
  id          String    @id @default(cuid())
  userId      String
  figurinhaId String
  quantidade  Int       @default(1)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  figurinha   Figurinha @relation(fields: [figurinhaId], references: [id])
  user        User      @relation(fields: [userId], references: [id])

  @@unique([userId, figurinhaId])
  @@index([userId])
  @@index([figurinhaId])
}

model Troca {
  id                  String        @id @default(cuid())
  figurinhaOfertaId   String
  figurinhaDesejadaId String?
  usuarioEnviaId      String
  usuarioRecebeId     String?
  status              String
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  notificacoes        Notificacao[]
  figurinhaOferta     Figurinha     @relation(fields: [figurinhaOfertaId], references: [id])
  usuarioEnvia        User          @relation("TrocasEnviadas", fields: [usuarioEnviaId], references: [id])
  usuarioRecebe       User?         @relation("TrocasRecebidas", fields: [usuarioRecebeId], references: [id])

  @@index([usuarioEnviaId])
  @@index([usuarioRecebeId])
  @@index([figurinhaOfertaId])
}

model Time {
  id        String    @id @default(cuid())
  nome      String
  escudo    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  apiId     Int       @unique
  jogadores Jogador[]
}

model Jogador {
  id            String      @id @default(cuid())
  nome          String
  numero        Int?
  posicao       String?
  nacionalidade String?
  apiId         Int         @unique
  timeId        String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  foto          String?
  figurinhas    Figurinha[]
  time          Time        @relation(fields: [timeId], references: [id])

  @@index([timeId])
}

model TrocaFigurinha {
  id          String    @id @default(cuid())
  usuarioId   String
  figurinhaId String
  status      String    @default("DISPONIVEL")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  figurinha   Figurinha @relation(fields: [figurinhaId], references: [id])
  usuario     User      @relation(fields: [usuarioId], references: [id])

  @@index([usuarioId])
  @@index([figurinhaId])
}

model Notificacao {
  id        String   @id @default(cuid())
  tipo      String
  mensagem  String
  lida      Boolean  @default(false)
  usuarioId String
  trocaId   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  troca     Troca?   @relation(fields: [trocaId], references: [id])
  usuario   User     @relation(fields: [usuarioId], references: [id])

  @@index([usuarioId])
  @@index([trocaId])
}
